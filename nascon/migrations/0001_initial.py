# Generated by Django 5.2 on 2025-04-22 06:05

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Accommodation',
            fields=[
                ('accommodationid', models.IntegerField(db_column='AccommodationID', primary_key=True, serialize=False)),
                ('room_number', models.CharField(db_column='Room_Number', max_length=50)),
                ('checkin_date', models.DateField(db_column='CheckIN_Date')),
                ('checkout_date', models.DateField(db_column='CheckOut_Date')),
                ('cost', models.DecimalField(db_column='Cost', decimal_places=2, max_digits=10)),
            ],
            options={
                'db_table': 'Accommodation',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('eventid', models.IntegerField(db_column='EventID', primary_key=True, serialize=False)),
                ('event_name', models.CharField(db_column='Event_Name', max_length=255)),
                ('description', models.TextField(blank=True, db_column='Description', null=True)),
                ('category', models.CharField(blank=True, db_column='Category', max_length=255, null=True)),
                ('max_participants', models.IntegerField(db_column='Max_Participants')),
                ('registration_fees', models.DecimalField(db_column='Registration_Fees', decimal_places=2, max_digits=10)),
                ('registration_last_date', models.DateField(db_column='Registration_last_Date')),
                ('date_time', models.DateTimeField(db_column='Date_Time')),
            ],
            options={
                'db_table': 'Event',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Eventround',
            fields=[
                ('pk', models.CompositePrimaryKey('roundid', 'eventid', blank=True, editable=False, primary_key=True, serialize=False)),
                ('roundid', models.IntegerField(db_column='RoundID')),
                ('round_type', models.CharField(max_length=255)),
                ('start_time', models.DateTimeField()),
            ],
            options={
                'db_table': 'EventRound',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Participantevent',
            fields=[
                ('pk', models.CompositePrimaryKey('participantid', 'eventid', blank=True, editable=False, primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'ParticipantEvent',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('paymentid', models.IntegerField(db_column='PaymentID', primary_key=True, serialize=False)),
                ('amount', models.DecimalField(db_column='Amount', decimal_places=2, max_digits=10)),
                ('payment_due_date', models.DateField(db_column='Payment_Due_Date')),
            ],
            options={
                'db_table': 'Payment',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Society',
            fields=[
                ('societyid', models.IntegerField(db_column='SocietyID', primary_key=True, serialize=False)),
                ('societyname', models.CharField(db_column='SocietyName', max_length=255, unique=True)),
                ('description', models.TextField(blank=True, db_column='Description', null=True)),
            ],
            options={
                'db_table': 'Society',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Sponsor',
            fields=[
                ('pk', models.CompositePrimaryKey('sponsorid', 'eventid', blank=True, editable=False, primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'Sponsor',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Sponsorshippackage',
            fields=[
                ('packageid', models.IntegerField(db_column='PackageID', primary_key=True, serialize=False)),
                ('category', models.CharField(db_column='Category', max_length=255)),
                ('benefits', models.TextField(blank=True, db_column='Benefits', null=True)),
                ('cost', models.DecimalField(db_column='Cost', decimal_places=2, max_digits=10)),
            ],
            options={
                'db_table': 'SponsorshipPackage',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('teamid', models.IntegerField(db_column='TeamID', primary_key=True, serialize=False)),
                ('team_name', models.CharField(db_column='Team_Name', max_length=255, unique=True)),
                ('max_size', models.IntegerField(db_column='Max_Size')),
                ('score', models.IntegerField(blank=True, db_column='Score', null=True)),
            ],
            options={
                'db_table': 'Team',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('userid', models.IntegerField(db_column='UserID', primary_key=True, serialize=False)),
                ('username', models.CharField(db_column='Username', max_length=255, unique=True)),
                ('email', models.CharField(db_column='Email', max_length=255, unique=True)),
                ('password', models.CharField(db_column='Password', max_length=255)),
                ('role', models.CharField(db_column='Role', max_length=11)),
            ],
            options={
                'db_table': 'User',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Venue',
            fields=[
                ('venueid', models.IntegerField(db_column='VenueID', primary_key=True, serialize=False)),
                ('venue_name', models.CharField(db_column='Venue_Name', max_length=255)),
                ('capacity', models.IntegerField(db_column='Capacity')),
                ('location', models.CharField(db_column='Location', max_length=255)),
            ],
            options={
                'db_table': 'Venue',
                'managed': False,
            },
        ),
    ]
