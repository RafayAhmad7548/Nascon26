# Generated by Django 5.2 on 2025-04-28 17:23

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Accommodation',
            fields=[
                ('accommodation_id', models.AutoField(primary_key=True, serialize=False)),
                ('room_number', models.CharField(max_length=50)),
                ('checkin_date', models.DateField()),
                ('checkout_date', models.DateField()),
                ('cost', models.DecimalField(decimal_places=2, max_digits=10)),
            ],
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('payment_id', models.AutoField(primary_key=True, serialize=False)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('payment_due_date', models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name='SponsorshipPackage',
            fields=[
                ('package_id', models.AutoField(primary_key=True, serialize=False)),
                ('category', models.CharField(max_length=255)),
                ('benefits', models.TextField(blank=True, null=True)),
                ('cost', models.DecimalField(decimal_places=2, max_digits=10)),
            ],
        ),
        migrations.CreateModel(
            name='Venue',
            fields=[
                ('venue_id', models.AutoField(primary_key=True, serialize=False)),
                ('venue_name', models.CharField(max_length=255)),
                ('capacity', models.IntegerField()),
                ('location', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('role', models.CharField(choices=[('participant', 'participant'), ('organizer', 'organizer'), ('judge', 'judge'), ('society', 'society'), ('sponsor', 'sponsor')], max_length=11)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('accommodation_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='nascon.accommodation')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('event_id', models.AutoField(primary_key=True, serialize=False)),
                ('event_name', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('category', models.CharField(max_length=255)),
                ('max_participants', models.IntegerField()),
                ('registration_fees', models.DecimalField(decimal_places=2, max_digits=10)),
                ('registration_last_date', models.DateField()),
                ('date_time', models.DateTimeField()),
                ('judge_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='judges', to=settings.AUTH_USER_MODEL)),
                ('organizer_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='organizers', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Society',
            fields=[
                ('society_id', models.AutoField(primary_key=True, serialize=False)),
                ('society_name', models.CharField(max_length=255, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('team_id', models.AutoField(primary_key=True, serialize=False)),
                ('team_name', models.CharField(max_length=255, unique=True)),
                ('max_size', models.IntegerField()),
                ('score', models.IntegerField(blank=True, null=True)),
                ('paymentid', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='nascon.payment')),
            ],
        ),
        migrations.CreateModel(
            name='Sponsor',
            fields=[
                ('pk', models.CompositePrimaryKey('sponsor_id', 'event_id', blank=True, editable=False, primary_key=True, serialize=False)),
                ('event_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nascon.event')),
                ('sponsor_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('package', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nascon.sponsorshippackage')),
            ],
            options={
                'unique_together': {('sponsor_id', 'event_id')},
            },
        ),
        migrations.CreateModel(
            name='ParticipantEvent',
            fields=[
                ('pk', models.CompositePrimaryKey('participant_id', 'event_id', blank=True, editable=False, primary_key=True, serialize=False)),
                ('event_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nascon.event')),
                ('participant_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nascon.team')),
            ],
            options={
                'unique_together': {('participant_id', 'event_id')},
            },
        ),
        migrations.CreateModel(
            name='EventRound',
            fields=[
                ('pk', models.CompositePrimaryKey('round_id', 'event_id', blank=True, editable=False, primary_key=True, serialize=False)),
                ('round_id', models.IntegerField()),
                ('round_type', models.CharField(max_length=255)),
                ('start_time', models.DateTimeField()),
                ('event_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nascon.event')),
                ('venue_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nascon.venue')),
            ],
            options={
                'unique_together': {('round_id', 'event_id')},
            },
        ),
    ]
